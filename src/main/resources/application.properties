# ✨ ALTERAÇÃO AQUI: Nome da aplicação (você já tinha este)
spring.application.name=sistemadesalao

# ===================================================================
# ✨ ALTERAÇÃO AQUI: CONFIGURAÇÃO DA CONEXÃO COM O BANCO DE DADOS (DATASOURCE)
# ===================================================================
# URL de conexão JDBC para o PostgreSQL. Conecta no host 'localhost', porta '5432', e no banco 'sistemadesalao'.
spring.datasource.url=jdbc:postgresql://localhost:5432/salao

# Substitua 'seu_usuario_postgres' pelo seu nome de usuário do PostgreSQL.
spring.datasource.username=postgres

# Substitua 'sua_senha_postgres' pela sua senha do PostgreSQL.
spring.datasource.password=!info159456@ti

# ===================================================================
# ✨ ALTERAÇÃO AQUI: CONFIGURAÇÃO DO JPA/HIBERNATE
# ===================================================================
# Define o "dialeto" SQL que o Hibernate usará para se comunicar com o PostgreSQL.
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

# Esta é a configuração mais importante para desenvolvimento!
# 'update': O Hibernate irá comparar suas classes @Entity (Cliente, Servico, etc.) com o banco de dados.
# Se uma tabela ou coluna não existir, ele a criará automaticamente. Se você adicionar um novo campo na entidade, ele adicionará a coluna.
spring.jpa.hibernate.ddl-auto=update

# Opcional, mas muito útil para depuração: Mostra no console as queries SQL que o Hibernate está executando.
spring.jpa.show-sql=true

server.port=8081
